create function [dbo].[isAuthToolRedundant_Map]
(
	@userid int,
	@authtoolid int
)
returns bit
as
begin

	declare @authtooltype char(4);
	select
		@authtooltype = at.AuthToolType_IDREF
	from
		AuthTool at
	where
		at.AuthTool_ID = @authtoolid;

	declare @result bit;
	select
		@result = case when count(*) > 1 then 1 else 0 end
	from
		[User] u
		join map_User_AuthTool u_at on u_at.User_IDREF = u.[User_ID]
		join AuthTool at on at.AuthTool_ID = u_at.AuthTool_IDREF
	where
		at.AuthToolStatus_IDREF = 'ACTV'
		and u.[User_ID] = @userid
		and at.AuthToolType_IDREF = @authtooltype;

	return @result;

end;




create function [dbo].[isAuthToolRedundant_AuthTool]
(
	@authtoolid int,
	@authtoolstatus char(4),
	@authtooltype char(4)
)
returns bit
as
begin

	declare @result bit;
	declare @userid int;

	select
		@userid = uat.User_IDREF
	from
		map_User_AuthTool uat
	where
		uat.AuthTool_IDREF = @authtoolid;

	if @userid is null
		begin
			
			set @result = 0;
			return @result;
		
		end;
	else
		begin
		
			select
				@result = case when count(*) > 1 then 1 else 0 end
			from
				AuthTool at
				join map_User_AuthTool uat on uat.AuthTool_IDREF = at.AuthTool_ID
			where
				uat.User_IDREF = @userid
				and at.AuthToolStatus_IDREF = 'ACTV'
				and at.AuthToolType_IDREF = @authtooltype;
			
		end;

	return @result;

end;



CREATE function [dbo].[isAuthSMSMobilePhoneUnique] (
	@mobilePhone_ID int
)
returns bit
as
begin

	declare @isInUse bit;

	select
		@isInUse = case when count(*) > 1 then 0 else 1 end
	from
		AuthTool at
		join AuthSMS asms on asms.AuthTool_IDREF = at.AuthTool_ID
		join MobilePhone mp on mp.MobilePhone_ID = asms.MobilePhone_IDREF
	where
		at.AuthToolStatus_IDREF = 'ACTV'
		and at.AuthToolType_IDREF = 'SMSM'
		and mp.MobilePhone_ID = @mobilePhone_ID;
	
	return @isInUse;

end;